{"version":3,"sources":["utils/CpfValidator.js","assets/images/logobanky.svg","components/header/header.js","components/employeData/employeData.js","components/flowGuide/flowGuide.js","components/ownerData/ownerData.js","components/accountData/accountData.js","components/employeAddress/employeAddress.js","components/deliveryAddress/deliveryAddress.js","components/app/App.js","serviceWorker.js","index.js","utils/CnpjValidator.js"],"names":["exports","CpfValidator","cpf","numeros","digitos","soma","i","digitos_iguais","replace","length","charAt","substring","concat","module","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","Component","CnpjFormat","props","inputRef","onChange","other","Object","objectWithoutProperties","number_format_default","assign","getInputRef","onValueChange","values","target","value","format","EmployeData","state","cnpj","employeCreateDate","Date","toISOString","split","handleChange","prop","event","_this","setState","defineProperty","handleBlur","textValidator","refs","name","validate","setTimeout","console","log","submit","form","handleSubmit","goToNextForm","this","onRef","cnpjValidator","require","CnpjValidator","ValidatorForm","addValidationRule","lib","ref","noValidate","onSubmit","instantValidate","index_es","container","spacing","item","xs","label","InputProps","inputComponent","validators","errorMessages","onBlur","endAdornment","position","Done_default","type","fantasyName","socialName","segment","FlowGuide","activeStep","orientation","key","classes","completed","CpfFormat","TelFormat","OwnerData","birthDate","cpfValidator","_this2","telefone","variant","onClick","child","justify","AccountData","email","password","confirmPassword","CepFormat","EmployeAddress","states","CEP","district","street","number","complement","city","age","inputProps","id","DeliveryAddress","row","aria-label","control","style","width","theme","createMuiTheme","typography","fontFamily","join","fontWeightLight","fontWeightRegular","fontWeightMedium","App","submitted","goToPrevForm","step","history","push","styles","header_header","flowGuide_flowGuide","react_router","path","render","ownerData_ownerData","employeData_employeData","employeAddress_employeAddress","deliveryAddress_deliveryAddress","accountData_accountData","withRouter","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","tamanho","pos","resultado"],"mappings":"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","file":"static/js/main.3b187984.chunk.js","sourcesContent":["var CpfValidator = cpf => {\r\n  \r\n  cpf = cpf.replace(/[^\\d]+/g,'');\r\n\r\n  var numeros, digitos, soma, i, resultado, digitos_iguais;\r\n  digitos_iguais = 1;\r\n\r\n  if (cpf.length < 11) {\r\n    return false;\r\n  }\r\n\r\n  for (i = 0; i < cpf.length - 1; i++) {\r\n    if (cpf.charAt(i) !== cpf.charAt(i + 1)) {\r\n      digitos_iguais = 0;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!digitos_iguais) {\r\n    numeros = cpf.substring(0,9);\r\n    digitos = cpf.substring(9);\r\n    soma = 0;\r\n\r\n    for (i = 10; i > 1; i--) {\r\n      soma += numeros.charAt(10 - i) * i;\r\n    }\r\n\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n\r\n    if (`${resultado}` !== digitos.charAt(0)) {\r\n      return false;\r\n    }\r\n\r\n    numeros = cpf.substring(0,10);\r\n    soma = 0;\r\n\r\n    for (i = 11; i > 1; i--) {\r\n      soma += numeros.charAt(11 - i) * i;\r\n    }\r\n\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n\r\n    if (`${resultado}` !== digitos.charAt(1)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexports.CpfValidator = CpfValidator;","module.exports = __webpack_public_path__ + \"static/media/logobanky.6d91fab5.svg\";","import React, { Component } from 'react';\r\nimport '../../assets/styles/header.scss';\r\nimport logo from '../../assets/images/logobanky.svg';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <img src={logo} className=\"logo\"></img>\r\n          <ul className=\"action-menu\">\r\n            <li className=\"menu-itens\">\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/employeData.scss';\r\nimport { Grid, InputAdornment } from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nfunction CnpjFormat(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      format=\"##.###.###/####-##\"\r\n    />\r\n  );\r\n}\r\n\r\nclass EmployeData extends Component {\r\n\r\n  state = {\r\n    cnpj: '',\r\n    employeCreateDate: new Date().toISOString().split('T')[0]\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    const cnpjValidator = require('../../utils/CnpjValidator').CnpjValidator;\r\n    ValidatorForm.addValidationRule('cnpjValidator', value => {\r\n      return cnpjValidator(value);\r\n    });\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  handleBlur = event => {\r\n    let textValidator = this.refs[event.target.name];\r\n    textValidator.validate(event.target.value);\r\n\r\n    // use timeout when implements the check icon in the field\r\n    setTimeout(() => {\r\n      console.log(textValidator)\r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    this.refs.form.submit();\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.goToNextForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"employe-data\">\r\n\r\n      <h2 className=\"title\">Dados da&nbsp;<b>pessoa jurídica</b><span className=\"endpoint\"></span></h2>\r\n\r\n      <ValidatorForm\r\n        ref=\"form\"\r\n        noValidate\r\n        onSubmit={this.handleSubmit}\r\n        instantValidate={false}\r\n      >\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"cnpj\"\r\n              name=\"cnpj\"\r\n              value={this.state.cnpj}\r\n              className=\"field\"\r\n              label=\"CNPJ\"\r\n              InputProps={{\r\n                inputComponent: CnpjFormat\r\n              }}\r\n              validators={['required', 'cnpjValidator']}\r\n              errorMessages={['Digite um CNPJ', 'CNPJ invalido!']}\r\n              onChange={this.handleChange('cnpj')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"employeCreateDate\"\r\n              name=\"employeCreateDate\"\r\n              value={this.state.employeCreateDate}\r\n              className=\"field\"\r\n              label=\"Data de abertura da empresa\"\r\n              validators={['required']}\r\n              type=\"date\"\r\n              errorMessages={['Digite um data', 'Data invalida!']}\r\n              onChange={this.handleChange('employeCreateDate')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          ref=\"fantasyName\"\r\n          name=\"fantasyName\"\r\n          value={this.state.fantasyName}\r\n          className=\"field\"\r\n          label=\"Nome fantasia\"\r\n          validators={['required']}\r\n          errorMessages={['Digite o nome fantasia!']}\r\n          onChange={this.handleChange('fantasyName')}\r\n          onBlur={this.handleBlur}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\" className=\"check\">\r\n                <DoneIcon className=\"check-icon\" />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n\r\n        <TextValidator\r\n          ref=\"socialName\"\r\n          name=\"socialName\"\r\n          value={this.state.socialName}\r\n          className=\"field\"\r\n          label=\"Nome razão social\"\r\n          validators={['required']}\r\n          errorMessages={['Digite o nome razão social!']}\r\n          onChange={this.handleChange('socialName')}\r\n          onBlur={this.handleBlur}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\" className=\"check\">\r\n                <DoneIcon className=\"check-icon\" />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n\r\n        <TextValidator\r\n          ref=\"segment\"\r\n          name=\"segment\"\r\n          value={this.state.segment}\r\n          className=\"field\"\r\n          label=\"Ramo de atividade\"\r\n          validators={['required']}\r\n          errorMessages={['Digite o ramo de atividade']}\r\n          onChange={this.handleChange('segment')}\r\n          onBlur={this.handleBlur}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\" className=\"check\">\r\n                <DoneIcon className=\"check-icon\" />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </ValidatorForm>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeData;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/flowGuide.scss';\r\nimport { Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\r\n\r\nclass FlowGuide extends Component {\r\n\r\n  state = {\r\n    activeStep: 0\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flow-guide-content\">\r\n        <h2 className=\"subtitle\">Tenha em mãos:</h2>\r\n        <h3 className=\"subtitle minor\">Contrato Social da Empresa<br/>Documento pessoal (CNH, RG ou CPF)</h3>\r\n\r\n        <Stepper\r\n          activeStep={this.props.activeStep}\r\n          orientation=\"vertical\"\r\n          className=\"flow-guide-stepper\"\r\n        >\r\n          <Step\r\n            key=\"Dados do responsável da conta\"\r\n            className=\"flow-guide-step\"\r\n            classes={{completed: 'completed'}}\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Dados do responsável da conta</StepLabel>\r\n          </Step>\r\n          <Step\r\n            key=\"Dados da empresa\"\r\n            className=\"flow-guide-step\"\r\n            classes={{completed: 'completed'}}\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Dados da empresa</StepLabel>\r\n            <StepContent className=\"flow-guide-step-content\">Usamos essas informações para validar os dados da pessoa jurídica.</StepContent>\r\n          </Step>\r\n          <Step\r\n            key=\"Endereço da empresa\"\r\n            className=\"flow-guide-step\"\r\n            classes={{completed: 'completed'}}\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Endereço da empresa</StepLabel>\r\n            <StepContent className=\"flow-guide-step-content\">Informe corretamente os dados do endereço da empresa.</StepContent>\r\n          </Step>\r\n          <Step\r\n            key=\"Endereço de correspondência\"\r\n            className=\"flow-guide-step\"\r\n            classes={{completed: 'completed'}}\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Endereço de correspondência</StepLabel>\r\n          </Step>\r\n          <Step\r\n            key=\"Dados de acesso à conta\"\r\n            className=\"flow-guide-step\"\r\n            classes={{completed: 'completed'}}\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Dados de acesso à conta</StepLabel>\r\n          </Step>\r\n          <Step\r\n            key=\"Confirmação de dados\"\r\n            className=\"flow-guide-step\"\r\n            classes={{completed: 'completed'}}\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Confirmação de dados</StepLabel>\r\n          </Step>\r\n          <Step\r\n            key=\"Abertura de conta\"\r\n            className=\"flow-guide-step\"\r\n            classes={{completed: 'completed'}}\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Abertura de conta</StepLabel>\r\n          </Step>\r\n        </Stepper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlowGuide;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/ownerData.scss';\r\nimport { Grid, InputAdornment, Fab } from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nfunction CpfFormat(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      format=\"###.###.###-##\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction TelFormat(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      format=\"(##) #####-####\"\r\n    />\r\n  );\r\n}\r\n\r\nclass OwnerData extends Component {\r\n\r\n  state = {\r\n    cpf: '',\r\n    birthDate: new Date().toISOString().split('T')[0]\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    const cpfValidator = require('../../utils/CpfValidator').CpfValidator;\r\n    ValidatorForm.addValidationRule('cpfValidator', value => {\r\n      return cpfValidator(value);\r\n    });\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  handleBlur = event => {\r\n    this.refs[event.target.name].validate(event.target.value);\r\n\r\n    // use timeout when implements the check icon in the field\r\n    setTimeout(() => console.log());\r\n  }\r\n\r\n  submit = () => {\r\n    this.refs.form.submit();\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.goToNextForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"owner-data\">\r\n\r\n      <h2 className=\"title\">Dados do&nbsp;<b>responsável da conta</b><span className=\"endpoint\"></span></h2>\r\n\r\n      <ValidatorForm\r\n        ref=\"form\"\r\n        noValidate\r\n        onSubmit={this.handleSubmit}\r\n        instantValidate={false}\r\n      >\r\n\r\n        <TextValidator\r\n          ref=\"name\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          className=\"field\"\r\n          label=\"Nome\"\r\n          validators={['required']}\r\n          errorMessages={['Digite o nome']}\r\n          onChange={this.handleChange('name')}\r\n          onBlur={this.handleBlur}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\" className=\"check\">\r\n                <DoneIcon className=\"check-icon\" />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"cpf\"\r\n              name=\"cpf\"\r\n              value={this.state.cpf}\r\n              className=\"field\"\r\n              label=\"CPF\"\r\n              validators={['cpfValidator', 'required']}\r\n              errorMessages={['CPF invalido!', 'Digite um CPF']}\r\n              onChange={this.handleChange('cpf')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                inputComponent: CpfFormat,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"birthDate\"\r\n              name=\"birthDate\"\r\n              value={this.state.birthDate}\r\n              className=\"field\"\r\n              label=\"Data de nascimento\"\r\n              validators={['required']}\r\n              type=\"date\"\r\n              errorMessages={['Digite um cpf', 'cpf invalido!']}\r\n              onChange={this.handleChange('birthDate')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"telefone\"\r\n              name=\"telefone\"\r\n              value={this.state.telefone}\r\n              className=\"field\"\r\n              label=\"Telefone\"\r\n              validators={['required']}\r\n              errorMessages={['Digite o nome razão social!']}\r\n              onChange={this.handleChange('telefone')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                inputComponent: TelFormat,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Fab\r\n              variant=\"extended\"\r\n              className=\"button action\"\r\n              onClick={() => this.child.submit()}\r\n            >\r\n              Enviar arquivo\r\n            </Fab>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={24} justify=\"flex-end\">\r\n          <Grid item xs={6} className=\"archive-label\">\r\n            <span>Anexar documento com foto do responsável da empresa.</span>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </ValidatorForm>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OwnerData;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/accountData.scss';\r\nimport { Grid, InputAdornment, Fab } from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nclass AccountData extends Component {\r\n\r\n  state = {\r\n    cpf: '',\r\n    birthDate: new Date().toISOString().split('T')[0]\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    const cpfValidator = require('../../utils/CpfValidator').CpfValidator;\r\n    ValidatorForm.addValidationRule('cpfValidator', value => {\r\n      return cpfValidator(value);\r\n    });\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  handleBlur = event => {\r\n    this.refs[event.target.name].validate(event.target.value);\r\n\r\n    // use timeout when implements the check icon in the field\r\n    setTimeout(() => console.log());\r\n  }\r\n\r\n  submit = () => {\r\n    this.refs.form.submit();\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.goToNextForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"account-data\">\r\n\r\n      <h2 className=\"title\">Dados do&nbsp;<b>responsável da conta</b><span className=\"endpoint\"></span></h2>\r\n\r\n      <ValidatorForm\r\n        ref=\"form\"\r\n        noValidate\r\n        onSubmit={this.handleSubmit}\r\n        instantValidate={false}\r\n      >\r\n      \r\n        <TextValidator\r\n          ref=\"email\"\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          className=\"field\"\r\n          label=\"E-mail (Este será o seu login)\"\r\n          validators={['required', 'isEmail']}\r\n          errorMessages={['Digite o E-mail!', 'E-mail invalido']}\r\n          onChange={this.handleChange('name')}\r\n          onBlur={this.handleBlur}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\" className=\"check\">\r\n                <DoneIcon className=\"check-icon\" />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              className=\"field\"\r\n              label=\"Nova senha\"\r\n              validators={['required']}\r\n              errorMessages={['Digite uma senha']}\r\n              onChange={this.handleChange('password')}\r\n              onBlur={this.handleBlur}\r\n              type=\"password\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <TextValidator\r\n              ref=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              value={this.state.confirmPassword}\r\n              className=\"field\"\r\n              label=\"Confirmar senha\"\r\n              validators={['required']}\r\n              errorMessages={['Digite uma senha']}\r\n              onChange={this.handleChange('confirmPassword')}\r\n              onBlur={this.handleBlur}\r\n              type=\"password\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </ValidatorForm>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountData;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/employeAddress.scss';\r\nimport { Grid, InputAdornment } from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { ValidatorForm, TextValidator, SelectValidator, MenuItem } from 'react-material-ui-form-validator';\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nfunction CepFormat(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      format=\"#####-###\"\r\n    />\r\n  );\r\n}\r\n\r\nclass EmployeAddress extends Component {\r\n\r\n  state = {\r\n    cnpj: '',\r\n    employeCreateDate: new Date().toISOString().split('T')[0],\r\n    states: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    const cnpjValidator = require('../../utils/CnpjValidator').CnpjValidator;\r\n    ValidatorForm.addValidationRule('cnpjValidator', value => {\r\n      return cnpjValidator(value);\r\n    });\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  handleBlur = event => {\r\n    let textValidator = this.refs[event.target.name];\r\n    textValidator.validate(event.target.value);\r\n\r\n    // use timeout when implements the check icon in the field\r\n    setTimeout(() => {\r\n      console.log(textValidator)\r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    this.refs.form.submit();\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.goToNextForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"employe-data\">\r\n\r\n      <h2 className=\"title\">Dados da&nbsp;<b>pessoa jurídica</b><span className=\"endpoint\"></span></h2>\r\n\r\n      <ValidatorForm\r\n        ref=\"form\"\r\n        noValidate\r\n        onSubmit={this.handleSubmit}\r\n        instantValidate={false}\r\n      >\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"CEP\"\r\n              name=\"CEP\"\r\n              value={this.state.CEP}\r\n              className=\"field\"\r\n              label=\"CEP\"\r\n              validators={['required']}\r\n              errorMessages={['Digite um CEP']}\r\n              onChange={this.handleChange('CEP')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                inputComponent: CepFormat,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"district\"\r\n              name=\"district\"\r\n              value={this.state.district}\r\n              className=\"field\"\r\n              label=\"Bairro\"\r\n              validators={['required']}\r\n              errorMessages={['Digite o bairro']}\r\n              onChange={this.handleChange('district')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          ref=\"street\"\r\n          name=\"street\"\r\n          value={this.state.street}\r\n          className=\"field\"\r\n          label=\"Rua\"\r\n          validators={['required']}\r\n          errorMessages={['Digite a rua']}\r\n          onChange={this.handleChange('street')}\r\n          onBlur={this.handleBlur}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\" className=\"check\">\r\n                <DoneIcon className=\"check-icon\" />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"number\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              className=\"field\"\r\n              label=\"Número\"\r\n              validators={['required']}\r\n              errorMessages={['Digite o número']}\r\n              onChange={this.handleChange('number')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"complement\"\r\n              name=\"complement\"\r\n              value={this.state.complement}\r\n              className=\"field\"\r\n              label=\"Complemento\"\r\n              validators={[]}\r\n              errorMessages={[]}\r\n              onChange={this.handleChange('complement')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"city\"\r\n              name=\"city\"\r\n              value={this.state.city}\r\n              className=\"field\"\r\n              label=\"cidade\"\r\n              validators={['required']}\r\n              errorMessages={['Digite a cidade']}\r\n              onChange={this.handleChange('city')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SelectValidator\r\n              value={this.state.age}\r\n              onChange={this.handleChange}\r\n              inputProps={{\r\n                name: 'age',\r\n                id: 'age-simple',\r\n              }}\r\n            >\r\n              <MenuItem key=\"1\" value=\"1\">1</MenuItem>\r\n            </SelectValidator>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </ValidatorForm>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeAddress;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/deliveryAddress.scss';\r\nimport { Grid, InputAdornment, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nfunction CepFormat(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      format=\"#####-###\"\r\n    />\r\n  );\r\n}\r\n\r\nclass DeliveryAddress extends Component {\r\n\r\n  state = {\r\n    cnpj: '',\r\n    employeCreateDate: new Date().toISOString().split('T')[0]\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    const cnpjValidator = require('../../utils/CnpjValidator').CnpjValidator;\r\n    ValidatorForm.addValidationRule('cnpjValidator', value => {\r\n      return cnpjValidator(value);\r\n    });\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  handleBlur = event => {\r\n    let textValidator = this.refs[event.target.name];\r\n    textValidator.validate(event.target.value);\r\n\r\n    // use timeout when implements the check icon in the field\r\n    setTimeout(() => {\r\n      console.log(textValidator)\r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    this.refs.form.submit();\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.goToNextForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"employe-data\">\r\n\r\n      <h2 className=\"title\">Dados da&nbsp;<b>pessoa jurídica</b><span className=\"endpoint\"></span></h2>\r\n\r\n      <ValidatorForm\r\n        ref=\"form\"\r\n        noValidate\r\n        onSubmit={this.handleSubmit}\r\n        instantValidate={false}\r\n      >\r\n      \r\n        <RadioGroup\r\n          row\r\n          aria-label=\"Gender\"\r\n          name=\"gender1\"\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n        >\r\n          <FormControlLabel value=\"yes\" control={<Radio style={{ width: 'auto' }} />} label=\"Sim\" />\r\n          <FormControlLabel value=\"no\" control={<Radio style={{ width: 'auto' }} />} label=\"Não\" />\r\n        </RadioGroup>\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"CEP\"\r\n              name=\"CEP\"\r\n              value={this.state.CEP}\r\n              className=\"field\"\r\n              label=\"CEP\"\r\n              validators={['required']}\r\n              errorMessages={['Digite um CEP']}\r\n              onChange={this.handleChange('CEP')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                inputComponent: CepFormat,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"district\"\r\n              name=\"district\"\r\n              value={this.state.district}\r\n              className=\"field\"\r\n              label=\"Bairro\"\r\n              validators={['required']}\r\n              errorMessages={['Digite o bairro']}\r\n              onChange={this.handleChange('district')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          ref=\"street\"\r\n          name=\"street\"\r\n          value={this.state.street}\r\n          className=\"field\"\r\n          label=\"Rua\"\r\n          validators={['required']}\r\n          errorMessages={['Digite a rua']}\r\n          onChange={this.handleChange('street')}\r\n          onBlur={this.handleBlur}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\" className=\"check\">\r\n                <DoneIcon className=\"check-icon\" />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"number\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              className=\"field\"\r\n              label=\"Número\"\r\n              validators={['required']}\r\n              errorMessages={['Digite o número']}\r\n              onChange={this.handleChange('number')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"complement\"\r\n              name=\"complement\"\r\n              value={this.state.complement}\r\n              className=\"field\"\r\n              label=\"Complemento\"\r\n              validators={['required']}\r\n              errorMessages={['Digite o complemento']}\r\n              onChange={this.handleChange('complement')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"city\"\r\n              name=\"city\"\r\n              value={this.state.city}\r\n              className=\"field\"\r\n              label=\"cidade\"\r\n              validators={['required']}\r\n              errorMessages={['Digite a cidade']}\r\n              onChange={this.handleChange('city')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SelectValidator\r\n              ref=\"state\"\r\n              name=\"state\"\r\n              value={this.state.state}\r\n              className=\"field\"\r\n              label=\"Estado\"\r\n              validators={['required']}\r\n              errorMessages={['Selecione o estado']}\r\n              onChange={this.handleChange('state')}\r\n              onBlur={this.handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" className=\"check\">\r\n                    <DoneIcon className=\"check-icon\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </ValidatorForm>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeliveryAddress;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/App.scss';\r\nimport Header from '../header/header'\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\nimport { MuiThemeProvider, createMuiTheme, Grid, Fab } from '@material-ui/core';\r\nimport EmployeData from '../employeData/employeData';\r\nimport FlowGuide from '../flowGuide/flowGuide';\r\nimport OwnerData from '../ownerData/ownerData';\r\nimport AccountData from '../accountData/accountData';\r\nimport EmployeAddress from '../employeAddress/employeAddress';\r\nimport DeliveryAddress from '../deliveryAddress/deliveryAddress';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: ['Open Sans', 'sans-serif'].join(','),\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 600\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    activeStep: 0\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.setState({ submitted: true }, () => {\r\n      setTimeout(() => this.setState({ submitted: false }), 5000);\r\n    });\r\n  }\r\n\r\n  goToPrevForm = () => {\r\n    const step = this.state.activeStep - 1;\r\n    if (step >= 0) {\r\n      this.props.history.push(`/step-${step+1}`)\r\n      this.setState({ activeStep: step });\r\n    }\r\n  }\r\n\r\n  goToNextForm = () => {\r\n    const step = this.state.activeStep + 1;\r\n    if (step <= 6) {\r\n      this.props.history.push(`/step-${step+1}`)\r\n      this.setState({ activeStep: step });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <main>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4} className=\"flow-guide-container\">\r\n                <FlowGuide activeStep={this.state.activeStep}/>\r\n              </Grid>\r\n              <Grid item xs={8} className=\"form-container\">\r\n                <Grid container spacing={0} className=\"form\" justify=\"center\">\r\n                  <Grid item xs={6}>\r\n                    <Switch>\r\n                      <Route path='/register' render={() => <OwnerData onRef={ref => (this.child = ref)} goToNextForm={this.goToNextForm} />} />\r\n                      <Route path='/register/step-2' render={() => <EmployeData onRef={ref => (this.child = ref)} goToNextForm={this.goToNextForm} />} />\r\n                      <Route path='/register/step-3' render={() => <EmployeAddress onRef={ref => (this.child = ref)} goToNextForm={this.goToNextForm} />} />\r\n                      <Route path='/register/step-4' render={() => <DeliveryAddress onRef={ref => (this.child = ref)} goToNextForm={this.goToNextForm} />} />\r\n                      <Route path='/register/step-5' render={() => <AccountData onRef={ref => (this.child = ref)} goToNextForm={this.goToNextForm} />} />\r\n                      <Route path='/register/step-6' render={() => <EmployeData onRef={ref => (this.child = ref)} goToNextForm={this.goToNextForm} />} />\r\n                      <Route path='/register/step-7' render={() => <EmployeData onRef={ref => (this.child = ref)} goToNextForm={this.goToNextForm} />} />\r\n                    </Switch>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Grid container spacing={0} justify=\"center\">\r\n                      <Grid item xs={6}>\r\n                        <Grid container spacing={24} justify=\"center\">\r\n                        \r\n                          <Grid item xs={6}>\r\n                            <Fab\r\n                              variant=\"extended\"\r\n                              className=\"button\"\r\n                              onClick={this.goToPrevForm}\r\n                            >\r\n                              Voltar  \r\n                            </Fab>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <Fab\r\n                              variant=\"extended\"\r\n                              className=\"button action\"\r\n                              onClick={() => this.child.submit()}\r\n                            >\r\n                              Continuar\r\n                            </Fab>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </main>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","var CnpjValidator = cnpj => {\r\n\r\n  cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n\r\n  if(cnpj === '') {\r\n    return false;\r\n  }\r\n\r\n  if (cnpj.length !== 14) {\r\n    return false;\r\n  }\r\n\r\n  // Elimina CNPJs invalidos conhecidos\r\n  if (cnpj === \"00000000000000\" || \r\n      cnpj === \"11111111111111\" || \r\n      cnpj === \"22222222222222\" || \r\n      cnpj === \"33333333333333\" || \r\n      cnpj === \"44444444444444\" || \r\n      cnpj === \"55555555555555\" || \r\n      cnpj === \"66666666666666\" || \r\n      cnpj === \"77777777777777\" || \r\n      cnpj === \"88888888888888\" || \r\n      cnpj === \"99999999999999\") {\r\n        return false;\r\n      }\r\n\r\n  // Valida DVs\r\n  let tamanho = cnpj.length - 2\r\n  let numeros = cnpj.substring(0,tamanho);\r\n  let digitos = cnpj.substring(tamanho);\r\n  let soma = 0;\r\n  let pos = tamanho - 7;\r\n\r\n  for (let i = tamanho; i >= 1; i--) {\r\n    soma += numeros.charAt(tamanho - i) * pos--;\r\n    if (pos < 2) {\r\n      pos = 9;\r\n    }\r\n  }\r\n\r\n  let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n  if (`${resultado}` !== digitos.charAt(0)) {\r\n    return false;\r\n  }\r\n  \r\n  tamanho = tamanho + 1;\r\n  numeros = cnpj.substring(0,tamanho);\r\n  soma = 0;\r\n  pos = tamanho - 7;\r\n\r\n  for (let i = tamanho; i >= 1; i--) {\r\n    soma += numeros.charAt(tamanho - i) * pos--;\r\n    if (pos < 2) {\r\n      pos = 9;\r\n    }\r\n  }\r\n  \r\n\r\n  resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n\r\n  if (`${resultado}` !== digitos.charAt(1)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexports.CnpjValidator = CnpjValidator;"],"sourceRoot":""}