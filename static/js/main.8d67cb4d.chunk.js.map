{"version":3,"sources":["assets/images/logobanky.svg","components/header/header.js","components/employeData/employeData.js","components/flowGuide/flowGuide.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","Component","EmployeData","state","cnpj","employeCreateDate","handleChange","prop","event","_this","setState","Object","defineProperty","target","value","handleBlur","refs","name","validate","setTimeout","console","log","handleSubmit","submitted","index_es","container","spacing","item","xs","lib","ref","this","label","validators","errorMessages","onChange","onBlur","type","fantasyName","socialName","segment","FlowGuide","activeStep","orientation","key","theme","createMuiTheme","typography","fontFamily","join","fontWeightLight","fontWeightRegular","fontWeightMedium","App","styles","header_header","flowGuide_flowGuide","noValidate","onSubmit","instantValidate","react_router","exact","path","component","justify","variant","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d67cb4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logobanky.6d91fab5.svg\";","import React, { Component } from 'react';\r\nimport '../../assets/styles/header.scss';\r\nimport logo from '../../assets/images/logobanky.svg';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <img src={logo} className=\"logo\"></img>\r\n          <ul className=\"action-menu\">\r\n            <li className=\"menu-itens\">\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/employeData.scss';\r\nimport { MenuItem, Button, Grid, Fab } from '@material-ui/core';\r\nimport { TextValidator, SelectValidator, ValidatorForm  } from 'react-material-ui-form-validator';\r\n\r\nclass EmployeData extends Component {\r\n\r\n  state = {\r\n    cnpj: '',\r\n    employeCreateDate: ''\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n  };\r\n\r\n  handleBlur = event => {\r\n    this.refs[event.target.name].validate(event.target.value);\r\n\r\n    // use timeout when implements the check icon in the field\r\n    setTimeout(() => console.log());\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.setState({ submitted: true }, () => {\r\n      setTimeout(() => this.setState({ submitted: false }), 5000);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"employe-data\">\r\n\r\n      <h2 className=\"subtitle\">Vamos lá!<br/>Agora precisamos dos dados da sua empresa, vai ser rapidinho!</h2>\r\n\r\n        <Grid container spacing={24}>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"cnpj\"\r\n              name=\"cnpj\"\r\n              value={this.state.cnpj}\r\n              className=\"field\"\r\n              label=\"CNPJ\"\r\n              validators={['required', 'minStringLength:14']}\r\n              errorMessages={['Digite um CNPJ', 'CNPJ invalido!']}\r\n              onChange={this.handleChange('cnpj')}\r\n              onBlur={this.handleBlur}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextValidator\r\n              ref=\"employeCreateDate\"\r\n              name=\"employeCreateDate\"\r\n              value={this.state.employeCreateDate}\r\n              className=\"field\"\r\n              label=\"Data de abertura da empresa\"\r\n              validators={['required']}\r\n              type=\"date\"\r\n              errorMessages={['Digite um CNPJ', 'CNPJ invalido!']}\r\n              onChange={this.handleChange('cnpj')}\r\n              onBlur={this.handleBlur}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          ref=\"fantasyName\"\r\n          name=\"fantasyName\"\r\n          value={this.state.fantasyName}\r\n          className=\"field\"\r\n          label=\"Nome fantasia\"\r\n          validators={['required']}\r\n          errorMessages={['Digite o nome fantasia!']}\r\n          onChange={this.handleChange('fantasyName')}\r\n          onBlur={this.handleBlur}\r\n        />\r\n\r\n        <TextValidator\r\n          ref=\"socialName\"\r\n          name=\"socialName\"\r\n          value={this.state.socialName}\r\n          className=\"field\"\r\n          label=\"Nome razão social\"\r\n          validators={['required']}\r\n          errorMessages={['Digite o nome razão social!']}\r\n          onChange={this.handleChange('socialName')}\r\n          onBlur={this.handleBlur}\r\n        />\r\n\r\n        <TextValidator\r\n          ref=\"segment\"\r\n          name=\"segment\"\r\n          value={this.state.segment}\r\n          className=\"field\"\r\n          label=\"Ramo de atividade\"\r\n          validators={['required']}\r\n          errorMessages={['Digite o ramo de atividade']}\r\n          onChange={this.handleChange('segment')}\r\n          onBlur={this.handleBlur}\r\n        />\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeData;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/flowGuide.scss';\r\nimport { Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\r\n\r\nclass FlowGuide extends Component {\r\n\r\n  state = {\r\n    activeStep: 0\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flow-guide-content\">\r\n        <h2 className=\"subtitle\">Tenha em mãos:</h2>\r\n        <h3 className=\"subtitle minor\">RG ou CNH;<br/>Contrato social da empresa Comprovante de residência</h3>\r\n\r\n        <Stepper\r\n          activeStep={this.state.activeStep}\r\n          orientation=\"vertical\"\r\n          className=\"flow-guide-stepper\"\r\n        >\r\n          <Step\r\n            key=\"teste\"\r\n            className=\"flow-guide-step\"\r\n          >\r\n            <StepLabel className=\"flow-guide-step-name\">Dados da empresa</StepLabel>\r\n            <StepContent className=\"flow-guide-step-content\">Usamos essas informações para validar os dados da pessoa jurídica.</StepContent>\r\n          </Step>\r\n          <Step key=\"teste 2\">\r\n            <StepLabel>Endereço da empresa</StepLabel>\r\n            <StepContent>Informe corretamente os dados do endereço da empresa.</StepContent>\r\n          </Step>\r\n          <Step key=\"teste 3\">\r\n            <StepLabel>Endereço de correspondência</StepLabel>\r\n          </Step>\r\n          <Step key=\"teste 3\">\r\n            <StepLabel>Dados do responsável da conta</StepLabel>\r\n          </Step>\r\n          <Step key=\"teste 3\">\r\n            <StepLabel>Dados de acesso à conta</StepLabel>\r\n          </Step>\r\n          <Step key=\"teste 3\">\r\n            <StepLabel>Confirmação das informações</StepLabel>\r\n          </Step>\r\n          <Step key=\"teste 3\">\r\n            <StepLabel>Abertura de conta</StepLabel>\r\n          </Step>\r\n        </Stepper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlowGuide;\r\n","import React, { Component } from 'react';\r\nimport '../../assets/styles/_fonts.scss';\r\nimport '../../assets/styles/_form.scss';\r\nimport '../../assets/styles/App.scss';\r\nimport Header from '../header/header'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { MuiThemeProvider, createMuiTheme, Grid, Fab } from '@material-ui/core';\r\nimport EmployeData from '../employeData/employeData';\r\nimport FlowGuide from '../flowGuide/flowGuide';\r\nimport { ValidatorForm } from 'react-material-ui-form-validator';\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: ['Nunito', 'sans-serif'].join(','),\r\n    fontWeightLight: 400,\r\n    fontWeightRegular: 600,\r\n    fontWeightMedium: 700\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    activeStep: 0\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <main>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={4} className=\"flow-guide-container\">\r\n                <FlowGuide />\r\n              </Grid>\r\n              <Grid item xs={8} className=\"form-container\">\r\n                <Grid container spacing={0}>\r\n                  \r\n                  <ValidatorForm\r\n                    className=\"form\"\r\n                    noValidate\r\n                    onSubmit={this.handleSubmit}\r\n                    instantValidate={false}\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      <Switch>\r\n                        <Route exact path='/register' component={EmployeData} />\r\n                      </Switch>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={24} justify=\"center\">\r\n                      <Grid item xs={4}>\r\n                        <Fab\r\n                          variant=\"extended\"\r\n                          className=\"button\"\r\n                        >\r\n                          Voltar  \r\n                        </Fab>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <Fab\r\n                          variant=\"extended\"\r\n                          className=\"button action\"\r\n                          >\r\n                          Abrir Conta\r\n                        </Fab>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </ValidatorForm>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </main>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}